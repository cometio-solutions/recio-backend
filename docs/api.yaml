swagger: "2.0"
info:
  title: RECIO API
  version: 1.0.0
host: 127.0.0.1:5000
tags:
- name: user
  description: Operations about user
schemes:
  - http
securityDefinitions:
  adminAuth:
    type: apiKey
    name: email
paths:
  /:
    get:
      summary: base route
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: app name
  # example
  /user:
    post:
      tags:
      - user
      summary: Enables user to create account in our system
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - in: body
        name: body
        description: User data that is needed to create user account in our system
        required: true
        schema:
          $ref: '#/definitions/CreateUserData'
      responses:
        200:
          description: user account created
        400:
          description: invalid data supplied (at least one item in response)
          schema:
            $ref: '#/definitions/InvalidRegisterInput'
        409:
          description: given email is already taken
  /user/auth:
    post:
      tags:
      - user
      summary: Logs user into the system (if 200 returns email as a cookie)
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
      - in: body
        name: body
        description: Data that is needed to authenticate user
        required: true
        schema:
          $ref: '#/definitions/LoginUserData'
      responses:
        200:
          description: authenticated
          schema:
            $ref: '#/definitions/UserRole'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: email=example@agh.edu.pl; Path=/
        400:
          description: invalid email or password
  /user/editorRequests:
    get:
      tags:
      - user
      summary: Returns editor requests made by users. Available only for admin. Needs 'email' field in headers.
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: editor requests fetched
          schema:
            type: array
            items:
              $ref: '#/definitions/EditorRequest'
        401:
          description: user is unauthenticated
        403:
          description: only admin have access to that
      security:
        - adminAuth: []
    post:
      tags:
        - user
      summary: Chenges role from 'user' to 'editor'. Needs 'email' field in headers.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Data that is needed to authenticate user
          required: true
          schema:
            $ref: '#/definitions/EditorRequest'
      responses:
        200:
          description: Role changed to editor
        401:
          description: user is unauthenticated
        403:
          description: only admin have access to that
        409:
          description: invalid user information
      security:
          - adminAuth: []

        
definitions:
  CreateUserData:
    type: object
    properties:
      name:
        type: string
      email:
        description: should be unique in the system
        type: string
      password:
        type: string
      editorRequest:
        description: if set to true, editor request to admin will be send
        type: boolean
  LoginUserData:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  EditorRequest:
    type: object
    properties:
      name: 
        type: string
      email:
        type: string
  UserRole:
    type: object
    properties:
      role:
        description: either 'user', 'editor' or 'admin'
        type: string
  InvalidRegisterInput:
    type: object
    properties:
      name:
        description: provided name is invalid (optional)
        type: string
      email:
        description: provided email is invalid (optional)
        type: string
      password:
        description: provided password is invalid (optional)
        type: string